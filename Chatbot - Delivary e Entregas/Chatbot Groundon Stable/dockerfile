# Use uma imagem base
FROM ubuntu:20.04

# Definir variáveis de ambiente
ENV DEBIAN_FRONTEND noninteractive

# Atualizando o servidor
RUN apt-get update && apt-get upgrade -y

# instala o NodeJs mais recente
RUN apt-get install -y curl
RUN curl -fsSL https://deb.nodesource.com/setup_19.x | bash -
RUN apt-get install -y nodejs 
RUN apt-get install -y libglib2.0-0

# instala o npm
#RUN apt-get update && apt-get install -y npm tzdata
#RUN npm install


# Instala as dependências necessárias para o Puppeteer
RUN apt-get install -y wget gnupg \
    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
    && apt-get update \
    && apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 \
    --no-install-recommends \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user
RUN adduser --disabled-password myuser
USER myuser

# Copie os arquivos do seu projeto para o diretório de trabalho
COPY . .

# Defina a porta na qual a aplicação será executada
EXPOSE 7000

# Adicione o script como um comando
COPY start.sh .
RUN chmod +x start.sh

# Defina o comando que será executado quando o container for iniciado
CMD "./start.sh"

# Defina o comando que será executado quando o container for iniciado
#CMD ["npm", "start"]

#! Comandos docker
# Rodar o o docker >>> systemctl start docker



#! Terminal 
# dar permissao de executavel para o main.js
#sudo chmod +x main.js

# No terminal, navegue até o diretório raiz do seu projeto e execute o seguinte comando para construir a imagem:
# sudo docker build -t my_image .

# Verifique se a imagem foi criada com sucesso usando o seguinte comando:
# sudo docker images

# Execute o seguinte comando para criar um container a partir da imagem criada:
# docker run -p 3000:3000 myapp

# Verifique o container no 'http://localhost:3000'

#! Comandos ChatGPT e servidor
#como posso hospedar esse container na aws usando o cli

#compilando
#sudo docker build -t groundon_server .

# executando
#sudo docker run -p 7000:7000 groundon_server