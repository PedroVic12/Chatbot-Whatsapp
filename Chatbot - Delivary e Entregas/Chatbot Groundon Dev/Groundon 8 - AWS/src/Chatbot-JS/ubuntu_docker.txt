# Use uma imagem base
FROM ubuntu:20.04

# Definir variáveis de ambiente
ENV DEBIAN_FRONTEND noninteractive


# Define o diretório de trabalho para o main.js
WORKDIR /home/pedrov/Documentos/GitHub/Chatbot-Whatsapp/Chatbot - Delivary e Entregas/Chatbot Groundon Dev/Groundon 8 - AWS/src/Chatbot-JS

# Atualizando o servidor
RUN apt-get update && apt-get upgrade -y

# instala o NodeJs mais recente
RUN apt-get install -y curl
RUN apt-get install -y git
RUN curl -fsSL https://deb.nodesource.com/setup_19.x | bash -
RUN apt-get install -y nodejs 

# Instala o chromium e suas depedencias
RUN apt-get update -y
RUN apt-get install -y chromium-browser
RUN apt-get install -y libcups2
RUN apt-get install -y libglib2.0-0
RUN apt-get install -y libnss3
RUN apt-get install -y libatk-bridge2.0-0
RUN apt-get install -y libdrm2



#RUN npm init -y && npm set init.author.name "Peter Parker" && npm set init.license "ISC" && npm set init.version "1.0.0" && npm set init.main "main.js"
RUN npm init -y


# Copia os arquivos para o diretório de trabalho
COPY main.js .
COPY Chatbot Chatbot
COPY start-chatbot.sh .

RUN chmod +x start-chatbot.sh

#! instala o npm e tzdata
RUN npm install -g npm@latest

#Instala o puppeteer --> emulador do navegador
RUN apt-get install -yq libgconf-2-4
RUN npm install puppeteer@latest


# Instala as dependências
RUN npm install whatsapp-web.js
RUN npm install whatsapp-web.js@1.20.0-alpha.0
RUN npm install qrcode-terminal
RUN npm i git+https://github.com/pedroslopez/whatsapp-web.js/tree/fix-buttons-list
RUN npm install exceljs

RUN apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2
    libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4
    libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0
    libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1
    libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1
    libxss1 libxtst6 ca-certificates fonts-liberation libnss3 lsb-release
    xdg-utils wget

RUN apt-get update \
    && apt-get install -y wget gnupg \
    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
    && apt-get update \
    && apt-get install -y google-chrome-stable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 \
      --no-install-recommends \
    && rm -rf /var/lib/apt/lists/*


# Defina a porta na qual a aplicação será executada
EXPOSE 7000

# Defina o comando que será executado quando o container for iniciado
CMD "./start-chatbot.sh"

#! iniciar o dokcer --> systemctl start docker
#! buildando o docker --> sudo docker build -t servidor_groundon .
#! executando --> sudo docker run -p 7000:7000 servidor_groundon
